buildscript {
    repositories {
        mavenLocal()
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

version = '1.0'
group = 'com.roystain.mechnotury' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'mechnotury'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20200809-1.15.1'
	
    runs {
        client {
            workingDirectory project.file('run')
			
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            ideaModule "${project.name}.main"

            environment 'MOD_CLASSES', "${project.file("out/production/resources").canonicalPath};${project.file("out/production/classes").canonicalPath}"
            /*mods {
                main {
                    sources sourceSets.main
                }
            }*/
        }

        server {
            workingDirectory project.file('run')
			
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            ideaModule "${project.name}.main"

            environment 'MOD_CLASSES', "${project.file("out/production/resources").canonicalPath};${project.file("out/production/classes").canonicalPath}"
            /*mods {
                mechnotury {
                    source sourceSets.main
                }
            }*/
        }

        data {
            workingDirectory project.file('run')
			
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
			
            args '--mod', 'mechnotury', '--all', '--output', file('src/generated/resources/')
			
            mods {
                mechnotury {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.0'

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.15.2-1.2-35.2:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.15.2-1.2-35.2")

    compileOnly fg.deobf("top.theillusivec4.curios:curios:FORGE-1.15.2-2.0.2.6:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios:FORGE-1.15.2-2.0.2.6")

    compileOnly fg.deobf("mezz.jei:jei-1.15.2:6.0.2.12:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.15.2:6.0.2.12")
}
repositories {
    maven {
        name "patchouli"
        url 'https://maven.blamejared.com'
    }
    maven {
        name "curios"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "jei"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    mavenLocal()
}
jar {
    manifest {
        attributes([
            "Specification-Title": "mechnotury",
            "Specification-Vendor": "roystain",
            "Specification-Version": "1", 
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"roystain",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
/*jar.finalizedBy('reobfJar')
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}*/